{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/react-redux-challenges/05-React-in-Rails/admin-blog copy/app/javascript/blog/src/index.jsx\";\n// external modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as history } from 'history';\nimport { reducer as formReducer } from 'redux-form'; // internal modules\n\nimport postsReducer from './reducers/posts_reducer';\nimport PostsIndex from './containers/posts_index';\nimport PostsShow from './containers/posts_show';\nimport PostsNew from './containers/posts_new'; //import '../assets/stylesheets/application.scss';\n\nvar root = document.querySelector('#root');\nvar initialState = {\n  posts: JSON.parse(root.dataset.posts)\n}; // State and reducers\n\nvar reducers = combineReducers({\n  posts: postsReducer,\n  form: formReducer\n});\nvar middlewares = applyMiddleware(reduxPromise, logger); // render an instance of the component in the DOM\n\nReactDOM.render(React.createElement(Provider, {\n  store: createStore(reducers, initialState, middlewares),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"thin-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/posts\",\n  exact: true,\n  component: PostsIndex,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/new\",\n  exact: true,\n  component: PostsNew,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/:id\",\n  component: PostsShow,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  from: \"/\",\n  to: \"posts\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}))))), root);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/react-redux-challenges/05-React-in-Rails/admin-blog copy/app/javascript/blog/src/index.jsx"],"names":["React","ReactDOM","Provider","createStore","combineReducers","applyMiddleware","reduxPromise","logger","BrowserRouter","Router","Route","Switch","Redirect","createBrowserHistory","history","reducer","formReducer","postsReducer","PostsIndex","PostsShow","PostsNew","root","document","querySelector","initialState","posts","JSON","parse","dataset","reducers","form","middlewares","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,oBAAoB,IAAIC,OAAjC,QAAgD,SAAhD;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;;AACA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;AACA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,OAAL,CAAaH,KAAxB;AAAT,CAArB,C,CAEA;;AACA,IAAMI,QAAQ,GAAGzB,eAAe,CAAC;AAC/BqB,EAAAA,KAAK,EAAER,YADwB;AAE/Ba,EAAAA,IAAI,EAAEd;AAFyB,CAAD,CAAhC;AAKA,IAAMe,WAAW,GAAG1B,eAAe,CAACC,YAAD,EAAeC,MAAf,CAAnC,C,CAEA;;AACAN,QAAQ,CAAC+B,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAE7B,WAAW,CAAC0B,QAAD,EAAWL,YAAX,EAAyBO,WAAzB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEjB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,KAAK,MAA1B;AAA2B,EAAA,SAAS,EAAEI,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AAAyB,EAAA,KAAK,MAA9B;AAA+B,EAAA,SAAS,EAAEE,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AAAyB,EAAA,SAAS,EAAED,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC,GAAf;AAAmB,EAAA,EAAE,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADF,CADF,CADF,EAaEE,IAbF","sourcesContent":["// external modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as history } from 'history';\nimport { reducer as formReducer } from 'redux-form';\n\n// internal modules\nimport postsReducer from './reducers/posts_reducer';\nimport PostsIndex from './containers/posts_index';\nimport PostsShow from './containers/posts_show';\nimport PostsNew from './containers/posts_new';\n//import '../assets/stylesheets/application.scss';\nconst root = document.querySelector('#root')\nconst initialState = { posts: JSON.parse(root.dataset.posts) };\n\n// State and reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  form: formReducer\n});\n\nconst middlewares = applyMiddleware(reduxPromise, logger);\n\n// render an instance of the component in the DOM\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <Router history={history}>\n      <div className=\"thin-container\">\n        <Switch>\n          <Route path=\"/posts\" exact component={PostsIndex} />\n          <Route path=\"/posts/new\" exact component={PostsNew} />\n          <Route path=\"/posts/:id\" component={PostsShow} />\n          <Redirect from='/' to='posts'/>\n        </Switch>\n      </div>\n    </Router>\n  </Provider>,\n  root\n);\n"]},"metadata":{},"sourceType":"module"}