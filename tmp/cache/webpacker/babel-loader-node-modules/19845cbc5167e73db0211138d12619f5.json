{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/react-redux-challenges/05-React-in-Rails/admin-blog copy/app/javascript/frontend/src/views/posts_new.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { createPost } from '../actions';\n\nvar PostsNew =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostsNew, _Component);\n\n  function PostsNew() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostsNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostsNew)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (values) {\n      _this.props.createPost(values, function () {\n        _this.props.history.push('/posts');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostsNew, [{\n    key: \"renderField\",\n    value: function renderField(field) {\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, field.label), React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        type: field.type\n      }, field.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Title\",\n        name: \"title\",\n        type: \"text\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Content\"), React.createElement(Field, {\n        className: \"form-control\",\n        label: \"Content\",\n        name: \"content\",\n        component: \"textarea\",\n        rows: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        disabled: this.props.pristine || this.props.submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Create Post\"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Back\")));\n    }\n  }]);\n\n  return PostsNew;\n}(Component);\n\nexport default reduxForm({\n  form: 'newPostForm' // a unique identifier\n\n})(connect(null, {\n  createPost: createPost\n})(PostsNew));","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/react-redux-challenges/05-React-in-Rails/admin-blog copy/app/javascript/frontend/src/views/posts_new.jsx"],"names":["React","Component","connect","Field","reduxForm","Link","createPost","PostsNew","onSubmit","values","props","history","push","field","label","type","input","handleSubmit","renderField","pristine","submitting","form"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,YAA3B;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAcJC,Q,GAAW,UAACC,MAAD,EAAY;AACrB,YAAKC,KAAL,CAAWJ,UAAX,CAAsBG,MAAtB,EAA8B,YAAM;AAClC,cAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAFD;AAGD,K;;;;;;;gCAjBWC,K,EAAO;AACjB,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQA,KAAK,CAACC,KAAd,CADF,EAEE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAED,KAAK,CAACE;AAFd,SAGMF,KAAK,CAACG,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAUD;;;6BAQQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,YAAX,CAAwB,KAAKT,QAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAE,KAAKU,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,SAAS,EAAC,UAJZ;AAKE,QAAA,IAAI,EAAC,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,QAAX,IAAuB,KAAKT,KAAL,CAAWU,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,EAkBE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,CADF,CADF;AA0BD;;;;EA/CoBnB,S;;AAkDvB,eAAeG,SAAS,CAAC;AACvBiB,EAAAA,IAAI,EAAE,aADiB,CACH;;AADG,CAAD,CAAT,CAGbnB,OAAO,CAAC,IAAD,EAAO;AAAEI,EAAAA,UAAU,EAAVA;AAAF,CAAP,CAAP,CAA8BC,QAA9B,CAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\n\nimport { createPost } from '../actions';\n\nclass PostsNew extends Component {\n  renderField(field) {\n    return (\n      <div className=\"form-group\">\n        <label>{field.label}</label>\n        <input\n          className=\"form-control\"\n          type={field.type}\n          {...field.input}\n        />\n      </div>\n    );\n  }\n\n  onSubmit = (values) => {\n    this.props.createPost(values, () => {\n      this.props.history.push('/posts');\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n          <Field\n            label=\"Title\"\n            name=\"title\"\n            type=\"text\"\n            component={this.renderField}\n          />\n          <label htmlFor=\"content\">Content</label>\n          <Field\n            className=\"form-control\"\n            label=\"Content\"\n            name=\"content\"\n            component=\"textarea\"\n            rows=\"8\"\n          />\n          <button className=\"btn btn-primary\" type=\"submit\" disabled={this.props.pristine || this.props.submitting}>\n            Create Post\n          </button>\n          <Link to=\"/\">\n            Back\n          </Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'newPostForm' // a unique identifier\n})(\n  connect(null, { createPost })(PostsNew)\n);\n"]},"metadata":{},"sourceType":"module"}