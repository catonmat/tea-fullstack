{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/react-redux-challenges/05-React-in-Rails/admin-blog copy/app/javascript/frontend/src/index.jsx\";\n// external modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as history } from 'history';\nimport { reducer as formReducer } from 'redux-form'; // internal modules\n\nimport postsReducer from './reducers/posts_reducer';\nimport PostsIndex from './views/posts_index';\nimport PostsShow from './views/posts_show';\nimport PostsNew from './views/posts_new'; // new modules\n\nimport ChatRoom from './views/chatroom/chatroom.jsx';\nimport Login from './views/login/login.jsx';\nimport MatchProfile from './views/match_profile/match_profile.jsx';\nimport UserProfile from './views/user_profile/user_profile.jsx';\nimport Swiper from './views/swiper/swiper.jsx'; //import '../assets/stylesheets/application.scss';\n\nvar root = document.querySelector('#root');\nvar initialState = {\n  posts: JSON.parse(root.dataset.posts)\n}; // State and reducers\n\nvar reducers = combineReducers({\n  posts: postsReducer,\n  form: formReducer\n});\nvar middlewares = applyMiddleware(reduxPromise, logger); // render an instance of the component in the DOM\n\nReactDOM.render(React.createElement(Provider, {\n  store: createStore(reducers, initialState, middlewares),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"thin-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/posts\",\n  exact: true,\n  component: PostsIndex,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/new\",\n  exact: true,\n  component: PostsNew,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/chatroom\",\n  component: ChatRoom,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/swiper\",\n  component: Swiper,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/match_profile\",\n  component: MatchProfile,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/user_profile\",\n  component: UserProfile,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/:id\",\n  component: PostsShow,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  from: \"/\",\n  to: \"posts\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}))))), root);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/react-redux-challenges/05-React-in-Rails/admin-blog copy/app/javascript/frontend/src/index.jsx"],"names":["React","ReactDOM","Provider","createStore","combineReducers","applyMiddleware","reduxPromise","logger","BrowserRouter","Router","Route","Switch","Redirect","createBrowserHistory","history","reducer","formReducer","postsReducer","PostsIndex","PostsShow","PostsNew","ChatRoom","Login","MatchProfile","UserProfile","Swiper","root","document","querySelector","initialState","posts","JSON","parse","dataset","reducers","form","middlewares","render"],"mappings":"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","sourcesContent":["// external modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as history } from 'history';\nimport { reducer as formReducer } from 'redux-form';\n\n// internal modules\nimport postsReducer from './reducers/posts_reducer';\nimport PostsIndex from './views/posts_index';\nimport PostsShow from './views/posts_show';\nimport PostsNew from './views/posts_new';\n\n// new modules\nimport ChatRoom from './views/chatroom/chatroom.jsx';\nimport Login from './views/login/login.jsx';\nimport MatchProfile from './views/match_profile/match_profile.jsx';\nimport UserProfile from './views/user_profile/user_profile.jsx';\nimport Swiper from './views/swiper/swiper.jsx';\n//import '../assets/stylesheets/application.scss';\nconst root = document.querySelector('#root')\nconst initialState = { posts: JSON.parse(root.dataset.posts) };\n\n// State and reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  form: formReducer\n});\n\nconst middlewares = applyMiddleware(reduxPromise, logger);\n\n// render an instance of the component in the DOM\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <Router history={history}>\n      <div className=\"thin-container\">\n        <Switch>\n          <Route path=\"/posts\" exact component={PostsIndex} />\n          <Route path=\"/posts/new\" exact component={PostsNew} />\n          <Route path=\"/posts/chatroom\" component={ChatRoom} />\n          <Route path=\"/posts/login\" component={Login} />\n          <Route path=\"/posts/swiper\" component={Swiper} />\n          <Route path=\"/posts/match_profile\" component={MatchProfile} />\n          <Route path=\"/posts/user_profile\" component={UserProfile} />\n          <Route path=\"/posts/:id\" component={PostsShow} />\n          <Redirect from='/' to='posts'/>\n        </Switch>\n      </div>\n    </Router>\n  </Provider>,\n  root\n);\n"]},"metadata":{},"sourceType":"module"}