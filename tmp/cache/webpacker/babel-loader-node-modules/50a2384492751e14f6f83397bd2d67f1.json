{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/chatroom/message.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// Core React and style\nimport React, { Component } from 'react';\nimport './style.scss'; // Redux\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { fetchAllUsers } from '../../actions/index.js';\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message(props) {\n    _classCallCheck(this, Message);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n  }\n\n  _createClass(Message, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.props.fetchAllUsers()\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"MESSAGES\"), React.createElement(Link, {\n        to: \"/chat_room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Back\"), this.props.conversation.map(function (message, index) {\n        React.createElement(Message, {\n          key: index + 1,\n          message: message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.conversations,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchAllUsers: fetchAllUsers\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/chatroom/message.jsx"],"names":["React","Component","connect","bindActionCreators","Link","_","fetchAllUsers","Message","props","conversation","map","message","index","mapStateToProps","state","conversations","users","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gFACXA,KADW;AAElB;;;;wCAEmB,CAClB;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGI,KAAKA,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA6B,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACjD,4BAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAK,GAAC,CAApB;AAAsB,UAAA,OAAO,EAAED,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,OAFC,CAHJ,CADF;AASD;;;;EAnBmBV,S;;AAsBtB,SAASY,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,aAAa,EAAED,KAAK,CAACC,aADhB;AAELC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFR,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOf,kBAAkB,CAAC;AAAEG,IAAAA,aAAa,EAAbA;AAAF,GAAD,EAAoBY,QAApB,CAAzB;AACD;;AAED,eAAehB,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CV,OAA7C,CAAf","sourcesContent":["// Core React and style\nimport React, { Component } from 'react';\nimport './style.scss';\n// Redux\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { fetchAllUsers } from '../../actions/index.js';\n\nclass Message extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    // this.props.fetchAllUsers()\n  }\n\n  render() {\n    return(\n      <div>\n        <p>MESSAGES</p>\n        <Link to=\"/chat_room\">Back</Link>\n        { this.props.conversation.map( (message, index) => {\n          <Message key={index+1}message={message}/>\n        })}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.conversations,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchAllUsers }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\n\n"]},"metadata":{},"sourceType":"module"}