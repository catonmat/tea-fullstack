{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/index.jsx\";\n// Core react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as history } from 'history';\nimport { reducer as formReducer } from 'redux-form';\nimport '../assets/stylesheets/application.scss'; // boilerplate internal modules\n\nimport PostsIndex from './views/posts_index';\nimport PostsShow from './views/posts_show';\nimport PostsNew from './views/posts_new'; // Containers\n\nimport ChatRoom from './views/chatroom/chatroom.jsx';\nimport Login from './views/login/login.jsx';\nimport MatchProfile from './views/match_profile/match_profile.jsx';\nimport UserProfile from './views/user_profile/user_profile.jsx';\nimport Swiper from './views/swiper/swiper.jsx';\nimport ConversationList from './views/chatroom/conversation_list.jsx'; // Reducers\n\nimport usersReducer from './reducers/users_reducer.js';\nimport currentUserReducer from './reducers/current_user_reducer.js';\nimport postsReducer from './reducers/posts_reducer';\nimport conversationsReducer from './reducers/conversations_reducer'; // Temporary Database\n\nimport { currentUser } from './data.js';\nconsole.log('Current User', currentUser);\nvar root = document.querySelector('#root');\nvar initialState = {\n  posts: JSON.parse(root.dataset.posts),\n  users: JSON.parse(root.dataset.users),\n  currentUser: currentUser,\n  conversations: JSON.parse(root.dataset.conversations)\n}; // Redux state init\n\nvar reducers = combineReducers({\n  posts: postsReducer,\n  form: formReducer,\n  users: usersReducer,\n  currentUser: currentUserReducer,\n  conversations: conversationsReducer\n}); //Middleware\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar middlewares = composeEnhancers(applyMiddleware(logger, reduxPromise)); // render an instance of the component in the DOM\n\nReactDOM.render(React.createElement(Provider, {\n  store: createStore(reducers, initialState, middlewares),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"global-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/posts\",\n  exact: true,\n  component: PostsIndex,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/new\",\n  exact: true,\n  component: PostsNew,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/chatroom\",\n  exact: true,\n  component: ChatRoom,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/login\",\n  exact: true,\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/swiper\",\n  exact: true,\n  component: Swiper,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/user_profile\",\n  exact: true,\n  component: UserProfile,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/chat_room\",\n  exact: true,\n  component: ChatRoom,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/chat_room/:id\",\n  exact: true,\n  component: ConversationList,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/match_profile/:id\",\n  exact: true,\n  component: MatchProfile,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/posts/:id\",\n  component: PostsShow,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  from: \"/\",\n  to: \"swiper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}))))), root);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/index.jsx"],"names":["React","ReactDOM","Provider","createStore","combineReducers","applyMiddleware","reduxPromise","logger","BrowserRouter","Router","Route","Switch","Redirect","createBrowserHistory","history","reducer","formReducer","PostsIndex","PostsShow","PostsNew","ChatRoom","Login","MatchProfile","UserProfile","Swiper","ConversationList","usersReducer","currentUserReducer","postsReducer","conversationsReducer","currentUser","console","log","root","document","querySelector","initialState","posts","JSON","parse","dataset","users","conversations","reducers","form","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","render"],"mappings":"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","sourcesContent":["// Core react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as history } from 'history';\nimport { reducer as formReducer } from 'redux-form';\nimport '../assets/stylesheets/application.scss';\n\n// boilerplate internal modules\nimport PostsIndex from './views/posts_index';\nimport PostsShow from './views/posts_show';\nimport PostsNew from './views/posts_new';\n\n// Containers\nimport ChatRoom from './views/chatroom/chatroom.jsx';\nimport Login from './views/login/login.jsx';\nimport MatchProfile from './views/match_profile/match_profile.jsx';\nimport UserProfile from './views/user_profile/user_profile.jsx';\nimport Swiper from './views/swiper/swiper.jsx';\nimport ConversationList from './views/chatroom/conversation_list.jsx';\n\n// Reducers\nimport usersReducer from './reducers/users_reducer.js';\nimport currentUserReducer from './reducers/current_user_reducer.js';\nimport postsReducer from './reducers/posts_reducer';\nimport conversationsReducer from './reducers/conversations_reducer';\n\n// Temporary Database\nimport { currentUser } from './data.js'\nconsole.log('Current User', currentUser)\n\nconst root = document.querySelector('#root')\nconst initialState = {\n  posts: JSON.parse(root.dataset.posts),\n  users: JSON.parse(root.dataset.users),\n  currentUser: currentUser,\n  conversations: JSON.parse(root.dataset.conversations)\n};\n\n// Redux state init\nconst reducers = combineReducers({\n  posts: postsReducer,\n  form: formReducer,\n  users: usersReducer,\n  currentUser: currentUserReducer,\n  conversations: conversationsReducer\n});\n\n//Middleware\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(logger, reduxPromise))\n\n// render an instance of the component in the DOM\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <Router history={history}>\n      <div className=\"global-container\">\n        <Switch>\n          <Route path=\"/posts\" exact component={PostsIndex} />\n          <Route path=\"/posts/new\" exact component={PostsNew} />\n          <Route path=\"/posts/chatroom\" exact component={ChatRoom} />\n          <Route path=\"/posts/login\" exact component={Login} />\n          <Route path=\"/swiper\" exact component={Swiper} />\n          <Route path=\"/user_profile\" exact component={UserProfile} />\n          <Route path=\"/chat_room\" exact component={ChatRoom} />\n          <Route path=\"/chat_room/:id\" exact component={ConversationList} />\n          <Route path=\"/match_profile/:id\" exact component={MatchProfile} />\n          <Route path=\"/posts/:id\" component={PostsShow} />\n          <Redirect from='/' to='swiper'/>\n        </Switch>\n      </div>\n    </Router>\n  </Provider>,\n  root\n);\n"]},"metadata":{},"sourceType":"module"}