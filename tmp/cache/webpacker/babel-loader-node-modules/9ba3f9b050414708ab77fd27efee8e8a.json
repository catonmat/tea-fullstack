{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/chatroom/personal_conversation.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// Core React and style\nimport React, { Component } from 'react';\nimport './style.scss'; //Components\n\nimport Message from './message.jsx'; // Redux\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { fetchAllUsers } from '../../actions/index.js';\n\nvar PersonalConversation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PersonalConversation, _Component);\n\n  function PersonalConversation(props) {\n    _classCallCheck(this, PersonalConversation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PersonalConversation).call(this, props));\n  }\n\n  _createClass(PersonalConversation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.props.fetchAllUsers()\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"MESSAGES\"), React.createElement(Link, {\n        to: \"/chat_room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Back\"), this.props.conversations.map(function (message, index) {\n        return React.createElement(Message, {\n          key: index + 1,\n          messages: JSON.parse(root.dataset.conversations),\n          userId: ParseInt(_this.props.location.pathname.split('/').slice(-1)[0], 10),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return PersonalConversation;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.conversations,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchAllUsers: fetchAllUsers\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalConversation);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/chatroom/personal_conversation.jsx"],"names":["React","Component","Message","connect","bindActionCreators","Link","_","fetchAllUsers","PersonalConversation","props","conversations","map","message","index","JSON","parse","root","dataset","ParseInt","location","pathname","split","slice","mapStateToProps","state","users","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP,C,CACA;;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAEMC,oB;;;;;AACJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,6FACXA,KADW;AAElB;;;;wCAEmB,CAClB;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGG,KAAKA,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAChD,eACA,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAK,GAAC,CAApB;AACS,UAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,OAAL,CAAaP,aAAxB,CADnB;AAES,UAAA,MAAM,EAAEQ,QAAQ,CAAC,KAAI,CAACT,KAAL,CAAWU,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwCC,KAAxC,CAA8C,CAAC,CAA/C,EAAkD,CAAlD,CAAD,EAAuD,EAAvD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAKD,OANA,CAHH,CADF;AAaD;;;;EAvBgCrB,S;;AA0BnC,SAASsB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLd,IAAAA,aAAa,EAAEc,KAAK,CAACd,aADhB;AAELe,IAAAA,KAAK,EAAED,KAAK,CAACC;AAFR,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOvB,kBAAkB,CAAC;AAAEG,IAAAA,aAAa,EAAbA;AAAF,GAAD,EAAoBoB,QAApB,CAAzB;AACD;;AAED,eAAexB,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,oBAA7C,CAAf","sourcesContent":["// Core React and style\nimport React, { Component } from 'react';\nimport './style.scss';\n//Components\nimport Message from './message.jsx';\n// Redux\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { fetchAllUsers } from '../../actions/index.js';\n\nclass PersonalConversation extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    // this.props.fetchAllUsers()\n  }\n\n  render() {\n    return(\n      <div>\n        <p>MESSAGES</p>\n        <Link to=\"/chat_room\">Back</Link>\n        {this.props.conversations.map((message, index) => {\n          return(\n          <Message key={index+1}\n                   messages={JSON.parse(root.dataset.conversations)}\n                   userId={ParseInt(this.props.location.pathname.split('/').slice(-1)[0], 10)}/>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.conversations,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchAllUsers }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalConversation);\n\n"]},"metadata":{},"sourceType":"module"}