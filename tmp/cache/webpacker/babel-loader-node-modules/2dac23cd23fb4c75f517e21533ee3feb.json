{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/chatroom/chatroom.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// Core React and style\nimport React, { Component } from 'react';\nimport './style.scss'; //Components\n\nimport NavBar from '../../components/navbar/navbar.jsx';\nimport MessageList from './message_list.jsx'; // Redux\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash'; // Actions\n\nimport { fetchAllUsers } from '../../actions/index.js';\n\nvar ChatRoom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatRoom, _Component);\n\n  function ChatRoom(props) {\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatRoom).call(this, props));\n\n    _this.renderMessageList = function () {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"It works\"); // this.props.users.filter(user => user.matched === true)\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chatroom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), this.renderMessageList, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Chatroom\"), React.createElement(MessageList, {\n        matchedUsers: this.props.users.filter(function (user) {\n          return user.matched === true;\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatRoom;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.conversations,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchAllUsers: fetchAllUsers\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/chatroom/chatroom.jsx"],"names":["React","Component","NavBar","MessageList","connect","bindActionCreators","Link","_","fetchAllUsers","ChatRoom","props","renderMessageList","users","filter","user","matched","mapStateToProps","state","conversations","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAInBC,iBAJmB,GAIC,YAAM;AACxB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADwB,CAIxB;AACD,KATkB;;AAAA;AAElB;;;;6BASQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKA,iBAFR,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE,oBAAC,WAAD;AAAa,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB;AAAA,SAA5B,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EArBoBd,S;;AAwBvB,SAASe,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,aAAa,EAAED,KAAK,CAACC,aADhB;AAELN,IAAAA,KAAK,EAAEK,KAAK,CAACL;AAFR,GAAP;AAID;;AAED,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOf,kBAAkB,CAAC;AAAEG,IAAAA,aAAa,EAAbA;AAAF,GAAD,EAAoBY,QAApB,CAAzB;AACD;;AAED,eAAehB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["// Core React and style\nimport React, { Component } from 'react';\nimport './style.scss';\n//Components\nimport NavBar from '../../components/navbar/navbar.jsx';\nimport MessageList from './message_list.jsx';\n// Redux\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n// Actions\nimport { fetchAllUsers } from '../../actions/index.js';\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  renderMessageList = () => {\n    return(\n      <p>It works</p>\n    )\n    // this.props.users.filter(user => user.matched === true)\n  }\n\n  render() {\n    return(\n      <div className=\"chatroom\">\n        <NavBar/>\n        {this.renderMessageList}\n        <h1>Chatroom</h1>\n        <MessageList matchedUsers={this.props.users.filter(user => user.matched === true)}/>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.conversations,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchAllUsers }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom);\n"]},"metadata":{},"sourceType":"module"}