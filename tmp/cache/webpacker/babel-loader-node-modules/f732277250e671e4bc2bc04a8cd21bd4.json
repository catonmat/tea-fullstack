{"ast":null,"code":"var _jsxFileName = \"/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/posts_show.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import { bindActionCreators } from 'redux';\n\nimport { Link } from 'react-router-dom';\nimport { fetchPost } from '../actions/index';\n\nvar PostsShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostsShow, _Component);\n\n  function PostsShow() {\n    _classCallCheck(this, PostsShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostsShow).apply(this, arguments));\n  }\n\n  _createClass(PostsShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchPost(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n\n      if (!post) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, post.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, post.content)), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return PostsShow;\n}(Component);\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    post: state.posts[ownProps.match.params.id]\n  };\n} // function mapDispatchToProps(dispatch) {\n//   return bindActionCreators({ fetchPost }, dispatch);\n// }\n\n\nexport default connect(mapStateToProps)(PostsShow);","map":{"version":3,"sources":["/Users/richardjarram/code/catonmat/tea-fullstack/app/javascript/frontend/src/views/posts_show.jsx"],"names":["React","Component","connect","Link","fetchPost","PostsShow","props","match","params","id","post","title","content","mapStateToProps","state","ownProps","posts"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,SAAX,CAAqB,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACD;;;6BAEQ;AAAA,UACCC,IADD,GACU,KAAKJ,KADf,CACCI,IADD;;AAGP,UAAI,CAACA,IAAL,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACC,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,IAAI,CAACE,OAAT,CAFF,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF;AAWD;;;;EAvBqBX,S;;AA0BxB,SAASY,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,SAAO;AAAEL,IAAAA,IAAI,EAAEI,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AAAR,GAAP;AACD,C,CAED;AACA;AACA;;;AAEA,eAAeP,OAAO,CAACW,eAAD,CAAP,CAAyBR,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPost } from '../actions/index';\n\nclass PostsShow extends Component {\n  componentDidMount() {\n    this.props.fetchPost(this.props.match.params.id);\n  }\n\n  render() {\n    const { post } = this.props;\n\n    if (!post) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div>\n        <div className=\"post-item\">\n          <h3>{post.title}</h3>\n          <p>{post.content}</p>\n        </div>\n        <Link to=\"/\">\n          Back\n        </Link>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return { post: state.posts[ownProps.match.params.id] };\n}\n\n// function mapDispatchToProps(dispatch) {\n//   return bindActionCreators({ fetchPost }, dispatch);\n// }\n\nexport default connect(mapStateToProps)(PostsShow);\n"]},"metadata":{},"sourceType":"module"}